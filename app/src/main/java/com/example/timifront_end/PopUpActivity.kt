package com.example.timifront_endimport android.graphics.Bitmapimport android.os.Bundleimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.Imageimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.wrapContentHeightimport androidx.compose.foundation.rememberScrollStateimport androidx.compose.foundation.verticalScrollimport androidx.compose.material3.Buttonimport androidx.compose.material3.MaterialThemeimport androidx.compose.material3.Surfaceimport androidx.compose.material3.Textimport androidx.compose.material3.TextFieldimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableIntStateOfimport androidx.compose.runtime.mutableStateOfimport androidx.compose.runtime.rememberimport androidx.compose.runtime.setValueimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.asImageBitmapimport androidx.compose.ui.unit.dpimport com.example.timifront_end.ui.theme.TimiFrontendThemeclass PopUpActivity : ComponentActivity() {    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        PopUpActivity.mutableResponse.intValue = 0        setContent {            TimiFrontendTheme {                Surface(                    modifier = Modifier.fillMaxSize(),                    color = MaterialTheme.colorScheme.background                ) {                    Column(                        modifier = Modifier.fillMaxSize(),                        horizontalAlignment = Alignment.CenterHorizontally                    ) {                        PopUpForm()                        Box(                            modifier = Modifier                                .wrapContentHeight(Alignment.CenterVertically)                        ) {                            ReceiptImage()                        }                    }                }            }        }    }    private fun checkEmail(email: String): Boolean {        return android.util.Patterns.EMAIL_ADDRESS.matcher(email)            .matches()    }    companion object {        val mutableResponse = mutableIntStateOf(0)        val mutableError = mutableStateOf<String>("")        val mutableBitmap = mutableStateOf<Bitmap?>(null)    }    @Composable    fun ReceiptImage() {        val bitmap = mutableBitmap.value        if (bitmap != null) {            val imageBitmap = bitmap.asImageBitmap()            Image(                bitmap = imageBitmap,                contentDescription = null,                modifier = Modifier                    .padding(16.dp)                    .verticalScroll(rememberScrollState())            )        }    }    @Composable    fun PopUpForm() {        var email by remember { mutableStateOf("") }        val activity = this        fun SendEmail(email: String): Boolean {            mutableError.value = ""            if (!checkEmail(email)) {                mutableError.value = "Incorrect email format"                return false            }            mutableResponse.intValue = 1            MainActivity.mutable_email.value = email            return true        }        Column(            modifier = Modifier                .padding(32.dp),            horizontalAlignment = Alignment.CenterHorizontally        ) {            TextField(                modifier = Modifier.padding(16.dp),                value = email,                onValueChange = { email = it },                label = { Text("Client's email") },            )            if (mutableError.value != "") {                Text(text = mutableError.value, color = MaterialTheme.colorScheme.error)            }            if (mutableResponse.intValue == 1) {                Text("Loading...")            }            if (mutableResponse.intValue == 2) {                mutableResponse.intValue = 0                activity.finish()            }            Button(onClick = { SendEmail(email) }) {                Text("Submit")            }        }    }}